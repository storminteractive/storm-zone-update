const winston = require('winston');

const fileFormat = winston.format.combine( 
    winston.format.timestamp({format: 'YYYY-MM-DD HH:mm:ss'}), 
    winston.format.printf(info => `${info.timestamp} ${info.service}: ${info.level}: ${info.message}`)
);

const consoleFormat = winston.format.combine( 
    winston.format.colorize(), 
    winston.format.timestamp({format: 'YYYY-MM-DD HH:mm:ss'}), 
    winston.format.printf(info => `${info.service}: ${info.level}: ${info.message}`)
);

const exportFunc = (serviceName) => {
    let s = serviceName || "default";

    let logger = winston.createLogger({
        level: 'info',
        defaultMeta: { service: s },
        transports: [
          new winston.transports.File({ level: 'error', filename: './logs/error.log', format: fileFormat }),
          new winston.transports.File({ level: 'debug', filename: './logs/debug.log',format: fileFormat }),
          new winston.transports.Console({level: 'debug', colorize: 'true',format: consoleFormat })
        ],
      });

      return logger;
}

module.exports = exportFunc;
/*
const logWinston = ((req,res,next)=>{
    const startTime = new Date().getTime();
    res.on('finish', () => {
        const finishTime = new Date().getTime();
        swe.debug(`${req.method} ${req.url} ${res.statusCode} ${finishTime - startTime}ms`);
      });
    next();
})
*/